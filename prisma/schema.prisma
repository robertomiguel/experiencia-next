// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Images {
  id          String        @id @default(cuid())
  jobId       String
  image       String
  params      Json
  hidden      Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedAt   DateTime?
  ImageByUser ImageByUser[]
}

model Jobs {
  job       String    @id @unique
  prompt    String
  seed      String
  model     String
  isReady   Boolean   @default(false)
  params    Json
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model ImageByUser {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  image     Images   @relation(fields: [imageId], references: [id])
  imageId   String
}

model WikiSearch {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wikipedia {
  id           String   @id @default(cuid())
  title        String
  description  String
  imageUrl     String
  originalData Json
  searchId     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Role {
  name        String   @id @unique
  description String
  imageLimit  Int      @default(5)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  password    String
  firstName   String?
  lastName    String?
  userName    String
  phoneNumber String?
  token       String?
  verified    Boolean   @default(false)
  status      String    @default("active")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  role   Role   @relation(fields: [roleId], references: [name])
  roleId String @default("user")

  ImageByUser ImageByUser[]
}
